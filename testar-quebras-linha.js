const mysql = require('mysql2/promise');

// Configura√ß√£o do banco
const dbConfig = {
  host: process.env.DB_HOST || 'localhost',
  user: process.env.DB_USER || 'root',
  password: process.env.DB_PASSWORD || '',
  database: process.env.DB_NAME || 'whatsapp_chatbot',
  charset: 'utf8mb4'
};

async function testarQuebrasLinha() {
  let connection;
  
  try {
    console.log('üîß Conectando ao banco de dados...');
    connection = await mysql.createConnection(dbConfig);
    
    console.log('üîç Buscando n√≥ da mensagem de compra...');
    const [flows] = await connection.execute(
      `SELECT id, name, flow_data FROM flows 
       WHERE name LIKE "%passag%" OR name LIKE "%onibus%" OR name LIKE "%via√ß√£o%" 
       ORDER BY id LIMIT 1`
    );
    
    if (flows.length === 0) {
      console.log('‚ùå Nenhum fluxo encontrado!');
      return;
    }
    
    const flow = flows[0];
    console.log(`üìã Analisando fluxo: ${flow.name}`);
    
    const flowData = JSON.parse(flow.flow_data);
    
    // Encontrar o n√≥ de compra de passagem
    const compraNode = flowData.nodes.find(node => 
      node.id === 'comprar_destino' || 
      (node.content && node.content.includes('COMPRA DE PASSAGEM'))
    );
    
    if (!compraNode) {
      console.log('‚ùå N√≥ de compra n√£o encontrado!');
      return;
    }
    
    console.log('\nüìÑ CONTE√öDO ATUAL DO N√ì:');
    console.log('========================');
    console.log(compraNode.content);
    console.log('========================');
    
    console.log('\nüîç AN√ÅLISE DAS QUEBRAS DE LINHA:');
    const lines = compraNode.content.split('\n');
    console.log(`Total de linhas: ${lines.length}`);
    
    lines.forEach((line, i) => {
      if (line.trim() === '') {
        console.log(`${i + 1}: [LINHA VAZIA]`);
      } else {
        console.log(`${i + 1}: "${line}"`);
      }
    });
    
    // Verificar se tem quebras duplas (\n\n)
    const hasDoubleBreaks = compraNode.content.includes('\n\n');
    console.log(`\n‚úÖ Tem quebras duplas: ${hasDoubleBreaks ? 'SIM' : 'N√ÉO'}`);
    
    // Contar caracteres especiais
    const newLineCount = (compraNode.content.match(/\n/g) || []).length;
    console.log(`‚úÖ Total de \\n: ${newLineCount}`);
    
    console.log('\n‚úÖ Fluxo analisado com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîå Conex√£o fechada');
    }
  }
}

// Executar o teste
console.log('üöÄ TESTANDO QUEBRAS DE LINHA NO FLUXO');
console.log('====================================');
testarQuebrasLinha().catch(console.error); 