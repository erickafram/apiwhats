const axios = require('axios');
require('dotenv').config();

// Configura√ß√µes da Maytapi
const PRODUCT_ID = process.env.MAYTAPI_PRODUCT_ID;
const TOKEN = process.env.MAYTAPI_TOKEN;
const API_URL = process.env.MAYTAPI_API_URL || 'https://api.maytapi.com/api';

const headers = {
  'Content-Type': 'application/json',
  'x-maytapi-key': TOKEN
};

async function checkAndSetupMaytapi() {
  console.log('üîß CONFIGURA√á√ÉO DA MAYTAPI');
  console.log('=========================');
  console.log('');

  // Verificar configura√ß√£o
  if (!PRODUCT_ID || !TOKEN) {
    console.log('‚ùå CONFIGURA√á√ÉO INCOMPLETA!');
    console.log('');
    console.log('Adicione no arquivo .env:');
    console.log('MAYTAPI_PRODUCT_ID=ebba8265-1e89-4e6a-8255-7eee3e64b7f5');
    console.log('MAYTAPI_TOKEN=af87a53c-3b0f-4188-b5de-2f7ed0acddda');
    console.log('USE_MAYTAPI=true');
    console.log('');
    return;
  }

  try {
    console.log('1Ô∏è‚É£ Verificando autentica√ß√£o...');
    
    // Testar autentica√ß√£o
    const authResponse = await axios.get(
      `${API_URL}/${PRODUCT_ID}/listPhones`,
      { headers }
    );

    console.log('‚úÖ Autentica√ß√£o bem-sucedida!');
    console.log('');

    console.log('2Ô∏è‚É£ Verificando inst√¢ncias existentes...');
    
    const phones = authResponse.data.data || [];
    console.log(`üì± Inst√¢ncias encontradas: ${phones.length}`);
    
    if (phones.length === 0) {
      console.log('');
      console.log('‚ö†Ô∏è NENHUMA INST√ÇNCIA ENCONTRADA!');
      console.log('');
      console.log('üîß COMO CRIAR UMA INST√ÇNCIA:');
      console.log('');
      console.log('1. Acesse: https://console.maytapi.com/');
      console.log('2. Fa√ßa login com suas credenciais');
      console.log('3. No menu lateral, clique em "Phones"');
      console.log('4. Clique no bot√£o "Add Phone" ou "Create Phone Instance"');
      console.log('5. Aguarde a cria√ß√£o (pode levar alguns segundos)');
      console.log('6. Anote o Phone ID gerado');
      console.log('');
      console.log('üìã AP√ìS CRIAR A INST√ÇNCIA:');
      console.log('1. Execute novamente: node setup-maytapi-instance.js');
      console.log('2. Inicie o servidor: npm start');
      console.log('3. Acesse: http://localhost:3000/bots');
      console.log('4. Conecte um bot e escaneie o QR Code');
      console.log('');
      
      // Abrir dashboard automaticamente
      console.log('üåê Abrindo dashboard da Maytapi...');
      const { exec } = require('child_process');
      exec('start https://console.maytapi.com/', (error) => {
        if (error) {
          console.log('üí° Acesse manualmente: https://console.maytapi.com/');
        }
      });
      
    } else {
      console.log('');
      console.log('‚úÖ INST√ÇNCIAS ENCONTRADAS:');
      console.log('');
      
      phones.forEach((phone, index) => {
        console.log(`üì± Inst√¢ncia ${index + 1}:`);
        console.log(`   ID: ${phone.id}`);
        console.log(`   Status: ${phone.status || 'N/A'}`);
        console.log(`   N√∫mero: ${phone.number || 'N√£o conectado'}`);
        console.log(`   Multi-device: ${phone.multi_device ? 'Sim' : 'N√£o'}`);
        console.log('');
      });
      
      console.log('üéâ CONFIGURA√á√ÉO COMPLETA!');
      console.log('');
      console.log('üìã PR√ìXIMOS PASSOS:');
      console.log('1. Execute: node fix-database.sql (no phpMyAdmin)');
      console.log('2. Reinicie o servidor: npm start');
      console.log('3. Acesse: http://localhost:3000/bots');
      console.log('4. Crie um bot e conecte via Maytapi');
      console.log('5. Escaneie o QR Code para conectar o WhatsApp');
      console.log('');
      
      // Testar uma inst√¢ncia
      const testPhone = phones[0];
      console.log('3Ô∏è‚É£ Testando inst√¢ncia...');
      
      try {
        const statusResponse = await axios.get(
          `${API_URL}/${PRODUCT_ID}/${testPhone.id}/status`,
          { headers }
        );
        
        console.log(`‚úÖ Status da inst√¢ncia ${testPhone.id}:`, statusResponse.data.data?.status || 'unknown');
        
        if (statusResponse.data.data?.status !== 'authenticated') {
          console.log('üí° Esta inst√¢ncia precisa ser autenticada (QR Code)');
        }
        
      } catch (statusError) {
        console.log('‚ö†Ô∏è Erro ao verificar status:', statusError.response?.data?.message || statusError.message);
      }
    }

  } catch (error) {
    console.error('‚ùå Erro:', error.response?.data || error.message);
    
    if (error.response?.status === 401) {
      console.log('');
      console.log('üîë ERRO DE AUTENTICA√á√ÉO');
      console.log('');
      console.log('Verifique se as credenciais est√£o corretas:');
      console.log(`Product ID: ${PRODUCT_ID}`);
      console.log(`Token: ${TOKEN ? '***' + TOKEN.slice(-4) : 'N√ÉO DEFINIDO'}`);
      console.log('');
      console.log('üí° Se as credenciais est√£o corretas, verifique:');
      console.log('1. Se a conta Maytapi est√° ativa');
      console.log('2. Se o token n√£o expirou');
      console.log('3. Se h√° cr√©ditos suficientes na conta');
    }
  }
}

async function main() {
  await checkAndSetupMaytapi();
}

main().catch(console.error);
