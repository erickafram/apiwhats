const axios = require('axios');

async function testFinalIntegration() {
  console.log('üéØ TESTE FINAL DA INTEGRA√á√ÉO MAYTAPI');
  console.log('===================================');
  console.log('');

  try {
    // 1. Verificar servidor
    console.log('1Ô∏è‚É£ Verificando servidor...');
    await axios.get('http://localhost:5000/health');
    console.log('‚úÖ Servidor funcionando');
    console.log('');

    // 2. Verificar Maytapi
    console.log('2Ô∏è‚É£ Verificando Maytapi...');
    const connectionsResponse = await axios.get('http://localhost:5000/api/maytapi/connections');
    console.log('‚úÖ Maytapi funcionando');
    console.log('üì± Conex√µes ativas:', Object.keys(connectionsResponse.data.connections).length);
    console.log('');

    // 3. Conectar bot
    console.log('3Ô∏è‚É£ Conectando bot...');
    const connectResponse = await axios.post('http://localhost:5000/api/maytapi/connect/10');
    console.log('‚úÖ Bot conectado!');
    console.log('üì± Phone ID:', connectResponse.data.phoneId);
    console.log('üìä Status:', connectResponse.data.status);
    console.log('üîó Conectado:', connectResponse.data.connected);
    console.log('');

    // 4. Verificar conex√£o
    console.log('4Ô∏è‚É£ Verificando conex√£o...');
    const newConnectionsResponse = await axios.get('http://localhost:5000/api/maytapi/connections');
    const connections = newConnectionsResponse.data.connections;
    
    if (connections['10']) {
      console.log('‚úÖ Bot 10 conectado com sucesso!');
      console.log('   üì± Phone ID:', connections['10'].phoneId);
      console.log('   üìä Status:', connections['10'].status);
      console.log('   üîó Conectado:', connections['10'].connected);
    } else {
      console.log('‚ö†Ô∏è Bot 10 n√£o encontrado nas conex√µes');
    }
    console.log('');

    // 5. Testar envio de mensagem
    console.log('5Ô∏è‚É£ Testando envio de mensagem...');
    const testMessage = {
      botId: 10,
      to: '5511999999999',
      message: 'üéâ INTEGRA√á√ÉO MAYTAPI FUNCIONANDO! üöÄ\n\nTeste realizado em: ' + new Date().toLocaleString()
    };

    const sendResponse = await axios.post('http://localhost:5000/api/maytapi/send-test', testMessage);
    
    if (sendResponse.data.success) {
      console.log('‚úÖ Mensagem enviada com sucesso!');
      console.log('üì® Resposta da API:', sendResponse.data.success);
    } else {
      console.log('‚ö†Ô∏è Mensagem enviada mas com aviso:', sendResponse.data.message);
    }
    console.log('');

    // 6. Resultado final
    console.log('üéâ INTEGRA√á√ÉO COMPLETA E FUNCIONANDO!');
    console.log('====================================');
    console.log('');
    console.log('‚úÖ TUDO FUNCIONANDO:');
    console.log('   üì± Inst√¢ncia Maytapi: 103174 (556392901378)');
    console.log('   ü§ñ Bot conectado e ativo');
    console.log('   üì® Mensagens sendo enviadas');
    console.log('   üîó API integrada com sucesso');
    console.log('');
    console.log('üåê ACESSE O FRONTEND:');
    console.log('   URL: http://localhost:3000/bots');
    console.log('');
    console.log('üì± COMO USAR:');
    console.log('   1. Acesse o frontend');
    console.log('   2. Crie um bot ou use existente');
    console.log('   3. O bot usar√° automaticamente a inst√¢ncia 103174');
    console.log('   4. Envie mensagens para testar!');
    console.log('');
    console.log('üîß CONFIGURAR WEBHOOK (OPCIONAL):');
    console.log('   1. Acesse: https://console.maytapi.com/');
    console.log('   2. Settings > Webhooks');
    console.log('   3. URL: http://seu-dominio.com/api/maytapi/webhook');
    console.log('   4. Eventos: message, status');

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.response?.data || error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('');
      console.log('üí° SOLU√á√ÉO: O servidor n√£o est√° rodando');
      console.log('   Execute: npm start');
    } else if (error.response?.status === 500) {
      console.log('');
      console.log('üí° SOLU√á√ÉO: Erro no servidor');
      console.log('   1. Verifique se o banco de dados est√° funcionando');
      console.log('   2. Execute o SQL de corre√ß√£o: fix-database.sql');
      console.log('   3. Reinicie o servidor');
    }
  }
}

testFinalIntegration().catch(console.error);
