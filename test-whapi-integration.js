const axios = require('axios');
require('dotenv').config();

// Configura√ß√µes do Whapi
const WHAPI_TOKEN = process.env.WHAPI_TOKEN || 'lPX5R5QAjWxazo8djm34yQTSSad8ZpZH';
const WHAPI_API_URL = process.env.WHAPI_API_URL || 'https://gate.whapi.cloud';

const headers = {
  'Content-Type': 'application/json',
  'Authorization': `Bearer ${WHAPI_TOKEN}`
};

async function testWhapiIntegration() {
  console.log('üîß TESTE DE INTEGRA√á√ÉO WHAPI.CLOUD');
  console.log('===================================');
  console.log('');

  // Verificar configura√ß√£o
  if (!WHAPI_TOKEN) {
    console.log('‚ùå CONFIGURA√á√ÉO INCOMPLETA!');
    console.log('');
    console.log('Adicione no arquivo .env:');
    console.log('WHAPI_TOKEN=lPX5R5QAjWxazo8djm34yQTSSad8ZpZH');
    console.log('WHAPI_API_URL=https://gate.whapi.cloud');
    console.log('USE_WHAPI=true');
    console.log('');
    return;
  }

  try {
    console.log('1Ô∏è‚É£ Verificando autentica√ß√£o...');
    console.log(`üîó API URL: ${WHAPI_API_URL}`);
    console.log(`üîë Token: ${WHAPI_TOKEN.substring(0, 10)}...`);
    console.log('');

    // Teste 1: Verificar informa√ß√µes da conta/perfil
    console.log('üì° Testando conex√£o com a API...');
    try {
      const profileResponse = await axios.get(`${WHAPI_API_URL}/me`, { headers });
      console.log('‚úÖ Conex√£o com API estabelecida');
      console.log('üìä Perfil:', JSON.stringify(profileResponse.data, null, 2));
      console.log('');
    } catch (error) {
      console.log('‚ùå Erro ao conectar com a API:', error.response?.data || error.message);
      console.log('‚ÑπÔ∏è Tentando endpoint alternativo...');
      console.log('');
    }

    // Teste 2: Verificar status da sess√£o
    console.log('üì± Verificando status da sess√£o...');
    try {
      const settingsResponse = await axios.get(`${WHAPI_API_URL}/settings`, { headers });
      console.log('‚úÖ Settings obtidos com sucesso');
      console.log('üìã Settings:', JSON.stringify(settingsResponse.data, null, 2));
      console.log('');
    } catch (error) {
      console.log('‚ùå Erro ao obter settings:', error.response?.data || error.message);
      console.log('');
    }

    // Teste 3: Verificar QR Code (se necess√°rio)
    console.log('üîç Verificando necessidade de QR Code...');
    try {
      const qrResponse = await axios.get(`${WHAPI_API_URL}/qr`, { headers });
      if (qrResponse.data && qrResponse.data.qr) {
        console.log('üì± QR Code dispon√≠vel para escaneamento');
        console.log('üîß QR Data:', qrResponse.data.qr.substring(0, 50) + '...');
      } else {
        console.log('‚úÖ WhatsApp j√° est√° conectado - QR Code n√£o necess√°rio');
      }
      console.log('');
    } catch (error) {
      console.log('‚ÑπÔ∏è QR Code n√£o dispon√≠vel (pode estar j√° conectado):', error.response?.status);
      console.log('');
    }

    // Teste 4: Teste de webhook (simula√ß√£o)
    console.log('üîó Informa√ß√µes de Webhook:');
    console.log(`üìç URL do webhook: ${process.env.WEBHOOK_URL || 'http://localhost:5000/api/whapi/webhook'}`);
    console.log('üí° Configure este webhook no painel do Whapi.cloud');
    console.log('');

    console.log('‚úÖ TESTE CONCLU√çDO COM SUCESSO!');
    console.log('');
    console.log('üöÄ PR√ìXIMOS PASSOS:');
    console.log('1. Configure o webhook no painel Whapi.cloud');
    console.log('2. Inicie o servidor: npm start');
    console.log('3. Acesse o frontend: http://localhost:3000/bots');
    console.log('4. Crie um bot e teste a conex√£o');
    console.log('');

  } catch (error) {
    console.error('‚ùå ERRO GERAL:', error.message);
    console.log('');
    console.log('üîß VERIFICA√á√ïES:');
    console.log('- Token est√° correto?');
    console.log('- Internet est√° funcionando?');
    console.log('- Whapi.cloud est√° acess√≠vel?');
  }
}

// Executar teste
if (require.main === module) {
  testWhapiIntegration();
}

module.exports = { testWhapiIntegration };
