const axios = require('axios');
require('dotenv').config();

// Configura√ß√µes
const apiUrl = process.env.ULTRAMSG_API_URL || 'https://api.ultramsg.com';
const instanceId = process.env.ULTRAMSG_INSTANCE_ID;
const token = process.env.ULTRAMSG_TOKEN;

console.log('üîç DIAGN√ìSTICO ULTRAMSG');
console.log('========================');
console.log(`üîó API URL: ${apiUrl}`);
console.log(`üì± Instance ID: ${instanceId}`);
console.log(`üîë Token: ${token ? 'Configurado' : '‚ùå N√ÉO CONFIGURADO'}`);
console.log('');

async function diagnosticar() {
  try {
    // 1. Verificar se as vari√°veis est√£o configuradas
    if (!instanceId || !token) {
      console.log('‚ùå ERRO: Vari√°veis de ambiente n√£o configuradas!');
      console.log('Configure no arquivo .env:');
      console.log('ULTRAMSG_INSTANCE_ID=sua_instance_id');
      console.log('ULTRAMSG_TOKEN=seu_token');
      return;
    }

    // 2. Verificar status da inst√¢ncia
    console.log('üì± Verificando status da inst√¢ncia...');
    try {
      const statusResponse = await axios.get(`${apiUrl}/${instanceId}/instance/status`, {
        params: { token: token }
      });

      console.log('‚úÖ Resposta do status:', statusResponse.data);
      
      const status = statusResponse.data.account_status;
      console.log(`üìä Status da conta: ${status}`);

      if (status === 'authenticated') {
        console.log('‚úÖ Bot est√° conectado e funcionando!');
      } else {
        console.log('‚ö†Ô∏è Bot N√ÉO est√° conectado!');
        console.log('üîß Solu√ß√µes:');
        console.log('1. Conecte pelo painel do UltraMsg');
        console.log('2. Ou use o QR Code pela API');
      }

    } catch (error) {
      console.log('‚ùå Erro ao verificar status:', error.response?.data || error.message);
    }

    // 3. Verificar webhook
    console.log('\nüì° Verificando configura√ß√£o do webhook...');
    try {
      const webhookResponse = await axios.get(`${apiUrl}/${instanceId}/instance/webhookUrl`, {
        params: { token: token }
      });

      console.log('‚úÖ Webhook configurado:', webhookResponse.data);
    } catch (error) {
      console.log('‚ùå Erro ao verificar webhook:', error.response?.data || error.message);
    }

    // 4. Verificar informa√ß√µes da conta
    console.log('\nüë§ Verificando informa√ß√µes da conta...');
    try {
      const accountResponse = await axios.get(`${apiUrl}/${instanceId}/instance/me`, {
        params: { token: token }
      });

      console.log('‚úÖ Informa√ß√µes da conta:', accountResponse.data);
    } catch (error) {
      console.log('‚ùå Erro ao verificar conta:', error.response?.data || error.message);
    }

  } catch (error) {
    console.log('‚ùå Erro geral:', error.message);
  }
}

// Executar diagn√≥stico
diagnosticar(); 